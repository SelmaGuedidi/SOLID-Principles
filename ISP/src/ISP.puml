@startuml
interface Door
{
    void lock();

    void unlock();

    void open();

    void close();

}
interface ISensingDoor extends Door{

    void proximityCallback();
}
interface ITimedDoor extends Door{
    void timeOutCallback();
}
class SensingDoor implements ISensingDoor
{
    - boolean _locked
    - boolean _opened
}
class TimedDoor implements ITimedDoor
{
    - static final int TIME_OUT = 100
    - boolean _locked
    - boolean _opened
}
class Sensor {
+ void register(ISensingDoor door)
- boolean isPersonClose()
}
class Timer {
+ void register(long timeOut, final ITimedDoor door)
}
Sensor ..> ISensingDoor
Timer ..> ITimedDoor
@enduml